version: '3.8'

services:
  mixtex-ocr:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - PYTHONPATH=/app
    volumes:
      # 挂载模型文件目录（如果模型文件很大，建议外部挂载）
      - ./model:/app/model:ro
      # 可选：挂载日志目录
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2'
        reservations:
          memory: 2G
          cpus: '1'

  # GPU 版本服务
  mixtex-ocr-gpu:
    build:
      context: .
      dockerfile: Dockerfile.gpu
      platforms:
        - linux/amd64
    ports:
      - "8001:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - PYTHONPATH=/app
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      # 挂载模型文件目录
      - ./model:/app/model:ro
      # 可选：挂载日志目录
      - ./logs:/app/logs
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - gpu

  # 可选：添加 Nginx 反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mixtex-ocr
    restart: unless-stopped
    profiles:
      - with-nginx
